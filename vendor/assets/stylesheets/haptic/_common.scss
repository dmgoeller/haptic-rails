$haptic-popover-z-index: 10000 !default;

@mixin haptic-container {
  align-items: stretch;
  display: flex;
  flex-direction: column;
}

@mixin haptic-grayed {
  filter: grayscale(1);
  opacity: 0.5;
  pointer-events: none;
}

@mixin haptic-overflow-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin haptic-mask-image($image-url) {
  -webkit-mask-image: url(#{$image-url});
  -webkit-mask-position: center;
  -webkit-mask-repeat: no-repeat;
  mask-image: url(#{$image-url});
  mask-position: center;
  mask-repeat: no-repeat;
}

/**********************************************************************
 * Buttons
 **********************************************************************/

.haptic-button, .haptic-icon-button {
  align-items: center;
  cursor: pointer;
  display: flex;
  justify-content: center;
}

.haptic-button {
  &.filled, &.outlined, &.text {
    @include haptic-overflow-ellipsis;
    display: grid;
    grid-auto-flow: column;
  }
}

button, input[type="reset"], input[type="submit"] {
  &.haptic-button, &.haptic-icon-button {
    appearance: none;

    &:disabled {
      @include haptic-grayed;
    }
  }
}

/**********************************************************************
 * Chips and segmented buttons
 **********************************************************************/

.haptic-button-segment, .haptic-chip {
  @include haptic-container;
  position: relative;

  label {
    @include haptic-overflow-ellipsis;
    pointer-events: none;
    position: absolute;
    text-align: center;
  }

  input {
    appearance: none;
    background-clip: padding-box;
    cursor: pointer;
    position: absolute;

    &::after {
      @include haptic-mask-image('checkmark.svg');
      content: '\200b';
      pointer-events: none;
      position: absolute;
    }
    &:disabled {
      &, & ~label {
        @include haptic-grayed;
      }
    }
  }
}

haptic-segmented-button {
  display: grid;
  grid-auto-flow: column;
}

/**********************************************************************
 * Dropdowns
 **********************************************************************/

haptic-dialog-dropdown, haptic-select-dropdown {
  position: relative;

  & > .toggle {
    cursor: default;
  }

  & > .popover {
    display: none;
    box-shadow:
      0 6px 10px rgba(0, 0, 0, .16),
      0 3px 6px rgba(0, 0, 0, .23);
    position: absolute;
    z-index: $haptic-popover-z-index;
  }

  & > .backdrop {
    display: none;
    position: fixed;
    z-index: $haptic-popover-z-index - 1;
  }

  &[popover-open] {
    & > .popover {
      display: flex;
      flex-direction: column;
    }
    & > .backdrop {
      display: initial;
    }
  }
}

haptic-option-list {
  display: flex;
  flex-direction: column;
  scroll-snap-type: y mandatory;
  overflow-y: auto;

  &::-webkit-scrollbar-thumb {
    background-clip: padding-box;
  }
}

haptic-option {
  cursor: default;
  position: relative;
  scroll-snap-align: start;
  white-space: nowrap;

  &::after {
    @include haptic-mask-image('checkmark.svg');
    content: '\200b';
    pointer-events: none;
    position: absolute;
  }

  * {
    pointer-events: none;
  }
}

/**********************************************************************
 * Fields
 **********************************************************************/

@mixin haptic-field-overlay {
  pointer-events: none;
  position: absolute;
  z-index: 1;
}

button, input, select, textarea {
  &.haptic-field {
    appearance: none;

    &:disabled {
      &.embedded {
        opacity: 1;
      }
      &:not(.embedded) {
        @include haptic-grayed;
      }
    }
  }
}

button.haptic-field {
  text-align: left;
}

textarea.haptic-field {
  overflow: hidden;
  resize: none;
}

haptic-dropdown-field, haptic-text-field {
  @include haptic-container;

  & > .haptic-field-container {
    @include haptic-container;
    position: relative;
  }

  .haptic-field.overflow-ellipsis {
    @include haptic-overflow-ellipsis;
    position: absolute;
  }

  .haptic-field-label {
    @include haptic-field-overlay;
    @include haptic-overflow-ellipsis;
  }

  &[required] .haptic-field-label::after {
    content: ' *';
  }

  &[focus-indicator] {
    & > .haptic-field-container::after {
      @include haptic-field-overlay;
      content: '\200b';
      opacity: 0;
    }

    &:focus-within {
      & > .haptic-field-container::after {
        opacity: 1;
      }
    }
  }

  .field_with_errors {
    @include haptic-container;
  }

  .leading-icon, .error-icon {
    @include haptic-field-overlay;
    align-items: center;
    display: flex;
    justify-content: center;
  }

  .error-icon {
    opacity: 0;
  }

  &[invalid] .error-icon {
    opacity: 1;
  }

  &[disabled], fieldset:disabled & {
    @include haptic-grayed;
  }
}

haptic-dropdown-field {
  &, & > .haptic-field-container, .haptic-field,
  haptic-dialog-dropdown, haptic-select-dropdown {
    flex-grow: 1;
  }

  & > .haptic-field-container::before {
    @include haptic-mask-image('dropdown-arrow.svg');
    @include haptic-field-overlay;
    content: '\200b';
  }
}

haptic-text-field {
  ::-webkit-inner-spin-button {
    appearance: none;
  }

  // TODO ::file-selector-button

  &[with-trailing-icon] {
    ::-webkit-calendar-picker-indicator {
      opacity: 0;
      position: absolute;
    }
  }

  &:not([with-trailing-icon]) {
    ::-webkit-calendar-picker-indicator {
      display: none;
    }
  }

  .clear-button, .trailing-icon {
    align-items: center;
    display: flex;
    justify-content: center;
    position: absolute;
    z-index: 1;
  }

  .clear-button {
    appearance: none;
    cursor: pointer;

    .haptic-icon {
      pointer-events: none;
    }
  }

  &[empty] .clear-button {
    opacity: 0;
    pointer-events: none;
  }

  &[disabled], fieldset:disabled & {
    .clear-button {
      pointer-events: none
    }
  }

  .trailing-icon {
    pointer-events: none;
  }
}

/**********************************************************************
 * Checkboxes, radio buttons and switches
 **********************************************************************/

.haptic-checkbox, .haptic-switch, .haptic-radio-button {
  cursor: pointer;
  position: relative;

  &::before, &::after {
    content: '\200b';
    pointer-events: none;
    position: absolute;
  }
}

.haptic-checkbox::after {
  $mask-image: "checkbox-checked-#{haptic-measure('16', '18')}.svg";
  @include haptic-mask-image($mask-image);
}

input[type="checkbox"].haptic-checkbox,
input[type="checkbox"].haptic-switch,
input[type="radio"].haptic-radio-button {
  appearance: none;

  &:not(.embedded):disabled {
    @include haptic-grayed;
  }
}

/**********************************************************************
 * Lists
 **********************************************************************/

haptic-list {
  display: flex;
  flex-direction: column;
  list-style-type: none;
}

haptic-list-item {
  align-items: center;
  display: flex;
  position: relative;
  user-select: none;

  .haptic-checkbox, .haptic-radio-button {
    position: absolute;
  }

  &[disabled] {
    @include haptic-grayed;
  }
}

/**********************************************************************
 * Labels
 **********************************************************************/

.haptic-label {
  &.grayed, fieldset:disabled & {
    @include haptic-grayed;
  }
}
