
$haptic-field-min-height: haptic-measure(1.75rem, 2.5rem) !default;
$haptic-field-with-label-min-height: 3.5rem !default;

/**********************************************************************
 * Buttons
 **********************************************************************/

 .haptic-button {
  box-sizing: border-box;
  border-width: 0;

  &.icon {
    $content-size: haptic-measure(1.5rem, 2.5rem);
    box-sizing: content-box;
    height: $content-size;
    line-height: haptic-measure(1.125rem, 1.5rem);
    padding: haptic-measure(.375rem, .5rem);
    width: $content-size;
  }

  &.filled, &.outlined, &.text {
    grid-gap: haptic-measure(.25rem, .5rem);
    min-height: haptic-measure(1.75rem, 2.5rem);

    .icon {
      height: 1.125rem;
      line-height: 1.125rem;
      width: 1.125rem;
    }
  }
  &.filled, &.outlined {
    .icon {
      margin-left: haptic-measure(-.25rem, -.5rem);
    }
  }
  &.filled {
    padding:
      #{haptic-measure(.25rem, .5rem)}
      #{haptic-measure(.75rem, 1.5rem)};
  }
  &.outlined {
    padding:
      calc(#{haptic-measure(.25rem, .5rem)} - 1px)
      calc(#{haptic-measure(.75rem, 1.5rem)} - 1px);
  }
  &.text {
    padding:
      #{haptic-measure(.25rem, .5rem)}
      #{haptic-measure(.5rem, .75rem)};

    .icon {
      margin-left: haptic-measure(-.125rem, 0);
    }
  }
}

/**********************************************************************
 * Chips and segmented buttons
 **********************************************************************/

.haptic-button-segment, .haptic-chip {
  $padding-left-right: haptic-measure(.5rem, .75rem);
  $icon-size: haptic-measure(1rem, 1.125rem);
  $spacing-between-icon-and-label: .5rem;

  box-sizing: border-box;
  min-height: haptic-measure(1.75rem, 2.5rem);
  min-width:
    $padding-left-right * 2 +
    $icon-size +
    $spacing-between-icon-and-label;

  input {
    height: 100%;
    margin: 0;
    outline: none;
    width: 100%;

    &::after {
      height: $icon-size;
      left: $padding-left-right;
      top: calc(50% - #{$icon-size / 2});
      width: $icon-size;
    }
  }

  label {
    $label-height: 1.125rem;
    $label-padding-left-right:
      $padding-left-right +
      $icon-size +
      $spacing-between-icon-and-label;

    box-sizing: border-box;
    height: $label-height;
    left: $label-padding-left-right;
    line-height: $label-height;
    top: calc(50% - #{$label-height / 2});
    width: calc(100% - #{$label-padding-left-right * 2});
  }
}

haptic-segmented-button:not(.outlined) {
  grid-gap: 1px;
}

/**********************************************************************
 * Dropdowns
 **********************************************************************/

haptic-dropdown {
  .toggle {
    height: 100%;
    width: 100%;
  }

  .popover {
    box-sizing: border-box;
    min-width: 100%;
    top: 100%;

    &.align-right {
      right: 0;
    }

    & > .section {
      padding:
        calc(.5rem - 1px)
        calc(#{haptic-measure(.5rem, 1rem)} - 1px);
    }
  }

  .backdrop {
    height: 100vh;
    left: 0;
    top: 0;
    width: 100vw;
  }
}

/**********************************************************************
 * Fields
 **********************************************************************/

@mixin haptic-field-padding-left($padding-left) {
  label, .haptic-field {
    padding-left: $padding-left;
  }
  .haptic-field.outlined {
    padding-left: calc(#{$padding-left} - 1px);
  }
}

@mixin haptic-field-padding-right($padding-right) {
  label, .haptic-field {
    padding-right: $padding-right;
  }
  .haptic-field.outlined {
    padding-right: calc(#{$padding-right} - 1px);
  }
}

.haptic-field {
  $padding-top-bottom: haptic-measure(.25rem, .5rem);
  $padding-left-right: haptic-measure(.5rem, 1rem);

  box-sizing: border-box;
  line-height: 1.25;
  min-height: $haptic-field-min-height;
  padding: $padding-top-bottom $padding-left-right;

  &.outlined {
    padding:
      calc(#{$padding-top-bottom} - 1px)
      calc(#{$padding-left-right} - 1px);
  }
}

haptic-dropdown-field, haptic-text-field {
  box-sizing: border-box;

  .haptic-field.overflow-ellipsis {
    height: 100%;
    width: 100%;
  }

  &[focus-indicator] {
    & > .container::after {
      bottom: 0;
      height: 3px;
      left: 0;
      width: 100%;
    }
  }

  &[with-label] {
    $padding-top-bottom: .5rem;
    min-height: $haptic-field-with-label-min-height;

    label {
      box-sizing: border-box;
      left: 0;
      top: $padding-top-bottom;
      width: 100%
    }

    .haptic-field {
      padding-bottom: $padding-top-bottom;
      padding-top: $padding-top-bottom + 1.25rem;
      vertical-align: bottom;

      &.outlined {
        padding-bottom: calc(#{$padding-top-bottom} - 1px);
        padding-top: calc(#{$padding-top-bottom + 1.25rem} - 1px);
      }
    }
  }

  &:not([with-label]) {
    min-height: $haptic-field-min-height;
  }

  .error-message, .supporting-text {
    margin:
      haptic-measure(
        .25rem .5rem 0 .5rem,
        .25rem 1rem 0 1rem
      );
  }
}

haptic-dropdown-field {
  @mixin dropdown-field-spacing($default-container-height,
                                $padding-left-right-without-icons,
                                $padding-left-right-with-icons,
                                $spacing-between-content-and-icons,
                                $spacing-between-icons,
                                $icon-size) {

    .container::before, .error-icon, .leading-icon {
      height: $icon-size;
      top: calc(50% - #{$icon-size / 2});
      width: $icon-size;
    }

    .container::before {
      right: $padding-left-right-with-icons;
    }

    &[with-leading-icon] {
      @include haptic-field-padding-left(
        $padding-left-right-with-icons +
        $icon-size +
        $spacing-between-content-and-icons
      );
      .leading-icon {
        left: $padding-left-right-with-icons;
      }
    }

    &:not([with-leading-icon]) {
      @include haptic-field-padding-left(
        $padding-left-right-without-icons
      );
    }

    &[with-error-icon] {
      @include haptic-field-padding-right(
        $padding-left-right-with-icons +
        $icon-size * 2 +
        $spacing-between-icons +
        $spacing-between-content-and-icons
      );

      .error-icon {
        right:
          $padding-left-right-with-icons +
          $icon-size +
          $spacing-between-icons;
      }
    }

    &:not([with-error-icon]) {
      @include haptic-field-padding-right(
        $spacing-between-content-and-icons +
        $icon-size +
        $padding-left-right-with-icons
      );
    }
  }

  &[with-label] {
    @include dropdown-field-spacing(
      $default-container-height: $haptic-field-with-label-min-height,
      $padding-left-right-without-icons: haptic-measure(.5rem, 1rem),
      $padding-left-right-with-icons: haptic-measure(.5rem, .75rem),
      $spacing-between-content-and-icons: haptic-measure(.5rem, 1rem),
      $spacing-between-icons: haptic-measure(.5rem, .75rem),
      $icon-size: 1.5rem
    );
  }

  &:not([with-label]) {
    @include dropdown-field-spacing(
      $default-container-height: $haptic-field-min-height,
      $padding-left-right-without-icons: haptic-measure(.5rem, 1rem),
      $padding-left-right-with-icons: haptic-measure(.25rem, .75rem),
      $spacing-between-content-and-icons: haptic-measure(.25rem, 1rem),
      $spacing-between-icons: haptic-measure(.25rem, .75rem),
      $icon-size: haptic-measure(1.125rem, 1.5rem)
    );
  }
}

haptic-text-field {
  @mixin text-field-spacing($default-container-height,
                            $padding-left-right-without-icons,
                            $padding-left-right-with-icons,
                            $spacing-between-content-and-icons,
                            $spacing-between-icons,
                            $clear-button-size,
                            $icon-size) {
    .clear-button {
      height: $clear-button-size;
      margin: ($icon-size - $clear-button-size) / 2;
      top: ($default-container-height - $icon-size) / 2;
      width: $clear-button-size;
    }

    .error-icon, .leading-icon, .trailing-icon,
    ::-webkit-calendar-picker-indicator {
      height: $icon-size;
      top: ($default-container-height - $icon-size) / 2;
      width: $icon-size;
    }

    &[with-leading-icon] {
      @include haptic-field-padding-left(
        $padding-left-right-with-icons +
        $icon-size +
        $spacing-between-content-and-icons
      );
      .leading-icon {
        left: $padding-left-right-with-icons;
      }
    }

    &:not([with-leading-icon]) {
      @include haptic-field-padding-left(
        $padding-left-right-without-icons
      );
    }

    &[with-trailing-icon] {
      .trailing-icon,
      ::-webkit-calendar-picker-indicator {
        right: $padding-left-right-with-icons;
      }
      &[with-error-icon] {
        .error-icon {
          right:
            $padding-left-right-with-icons +
            $icon-size +
            $spacing-between-icons;
        }
        &[with-clear-button] {
          @include haptic-field-padding-right(
            $padding-left-right-with-icons +
            $icon-size * 3 +
            $spacing-between-icons * 2 +
            $spacing-between-content-and-icons
          );
          .clear-button {
            right:
              $padding-left-right-with-icons +
              ($icon-size + $spacing-between-icons) * 2;
          }
        }
        &:not([with-clear-button]) {
          @include haptic-field-padding-right(
            $padding-left-right-with-icons +
            $icon-size * 2 +
            $spacing-between-icons +
            $spacing-between-content-and-icons
          );
        }
      }
      &:not([with-error-icon]) {
        &[with-clear-button] {
          @include haptic-field-padding-right(
            $padding-left-right-with-icons +
            $icon-size * 2 +
            $spacing-between-icons +
            $spacing-between-content-and-icons
          );
          .clear-button {
            right:
              $padding-left-right-with-icons +
              $icon-size +
              $spacing-between-icons;
          }
        }
        &:not([with-clear-button]) {
          @include haptic-field-padding-right(
            $padding-left-right-with-icons +
            $icon-size +
            $spacing-between-content-and-icons
          );
        }
      }
    }

    &:not([with-trailing-icon]) {
      &[with-error-icon] {
        .error-icon {
          right: $padding-left-right-with-icons;
        }
        &[with-clear-button] {
          @include haptic-field-padding-right(
            $padding-left-right-with-icons +
            $icon-size * 2 +
            $spacing-between-icons +
            $spacing-between-content-and-icons
          );
          .clear-button {
            right:
              $padding-left-right-with-icons +
              $icon-size +
              $spacing-between-icons;
          }
        }
        &:not([with-clear-button]) {
          @include haptic-field-padding-right(
            $padding-left-right-with-icons +
            $icon-size +
            $spacing-between-content-and-icons
          );
        }
      }
      &:not([with-error-icon]) {
        &[with-clear-button] {
          @include haptic-field-padding-right(
            $padding-left-right-with-icons +
            $icon-size +
            $spacing-between-content-and-icons
          );
          .clear-button {
            right: $padding-left-right-with-icons;
          }
        }
        &:not([with-clear-button]) {
          @include haptic-field-padding-right(
            $padding-left-right-without-icons
          );
        }
      }
    }
  }

  &[with-label] {
    @include text-field-spacing(
      $default-container-height: $haptic-field-with-label-min-height,
      $padding-left-right-without-icons: haptic-measure(.5rem, 1rem),
      $padding-left-right-with-icons: haptic-measure(.5rem, .75rem),
      $spacing-between-content-and-icons: haptic-measure(.5rem, 1rem),
      $spacing-between-icons: haptic-measure(.5rem, .75rem),
      $clear-button-size: 1.5rem,
      $icon-size: 1.5rem
    );

    &[animated][empty]:not([focus]) {
      label {
        $line-height: 1.125rem;
        line-height: $line-height;
        top: #{($haptic-field-with-label-min-height - $line-height) / 2};
      }
    }
  }

  &:not([with-label]) {
    @include text-field-spacing(
      $default-container-height: $haptic-field-min-height,
      $padding-left-right-without-icons: haptic-measure(.5rem, 1rem),
      $padding-left-right-with-icons: haptic-measure(.25rem, .75rem),
      $spacing-between-content-and-icons: haptic-measure(.25rem, 1rem),
      $spacing-between-icons: haptic-measure(.25rem, .75rem),
      $clear-button-size: haptic-measure(1.25rem, 1.5rem),
      $icon-size: haptic-measure(1.125rem, 1.5rem)
    );
  }
}

/**********************************************************************
 * Checkboxes and radio buttons
 **********************************************************************/

input[type="checkbox"].haptic-checkbox,
input[type="radio"].haptic-radio-button {
  margin: 0;

  &:not(.embedded) {
    outline-offset: 0;
    outline-width: haptic-measure(.375rem, .5rem);
  }
}

input[type="checkbox"].haptic-checkbox {
  $size: haptic-measure(1rem, 1.125rem);

  &, &::before, &::after {
    box-sizing: border-box;
    height: $size;
    width: $size;
  }
}

input[type="radio"].haptic-radio-button {
  $size: haptic-measure(1rem, 1.25rem);

  &, &::before {
    box-sizing: border-box;
    height: $size;
    width: $size;
  }

  &::after {
    height: #{$size / 2};
    left: #{$size / 4};
    top: #{$size / 4};
    width: #{$size / 2};
  }
}

/**********************************************************************
 * Switches
 **********************************************************************/

input[type="checkbox"].haptic-switch {
  $track-height: haptic-measure(1rem, 1.5rem);
  $track-width: haptic-measure(1.75rem, 2.5rem);

  box-sizing: border-box;
  height: $track-height;
  margin: 0;
  outline: none;
  width: $track-width;

  &::before {
    box-sizing: border-box;
    height: $track-height;
    margin: 0;
    width: $track-width;
  }

  &::after {
    height: calc(#{$track-height} - 4px);
    left: 2px;
    top: 2px;
    outline-offset: 0;
    outline-width: haptic-measure(.375rem, .5rem);
    width: calc(#{$track-height} - 4px);
  }

  &:checked::after {
    left: calc(#{$track-width - $track-height} + 2px);
  }
}

/**********************************************************************
 * Lists
 **********************************************************************/

.haptic-list {
  margin: 0;
  padding: 0;
}

.haptic-list-item {
  $min-content-height: 1.25rem;
  $padding-left-right: haptic-measure(.5rem, 1rem);
  $padding-top-bottom: haptic-measure(.25rem, .5rem);
  $spacing: haptic-measure(.75rem, 1rem);
  $icon-size: haptic-measure(1rem, 1.125rem);

  box-sizing: content-box;
  min-height: $min-content-height;
  padding-bottom: $padding-top-bottom;
  padding-left: #{$padding-left-right + $icon-size + $spacing};
  padding-right: $padding-left-right;
  padding-top: $padding-top-bottom;

  input[type="checkbox"].haptic-checkbox {
    height: 100%;
    left: 0;
    top: 0;
    width: 100%;

    &::before, &::after {
      left: $padding-left-right;
      top: #{$padding-top-bottom + ($min-content-height - $icon-size) / 2};
    }
  }
}
